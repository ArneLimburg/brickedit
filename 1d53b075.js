import{V as t,S as e,U as n,a,C as r,L as o,R as s,b as i,F as l,M as c,c as d,B as h,d as u,e as g,f as m,G as p,g as f,A as w,P as C}from"./1d9c64ea.js";const L=new t,b=new t;class y extends e{constructor(t){super({uniforms:n.merge([a.fog,{diffuse:{value:new r},opacity:{value:1}}]),vertexShader:"\n\t\t\t\tattribute vec3 control0;\n\t\t\t\tattribute vec3 control1;\n\t\t\t\tattribute vec3 direction;\n\t\t\t\tvarying float discardFlag;\n\n\t\t\t\t#include <common>\n\t\t\t\t#include <color_pars_vertex>\n\t\t\t\t#include <fog_pars_vertex>\n\t\t\t\t#include <logdepthbuf_pars_vertex>\n\t\t\t\t#include <clipping_planes_pars_vertex>\n\t\t\t\tvoid main() {\n\t\t\t\t\t#include <color_vertex>\n\n\t\t\t\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n\n\t\t\t\t\t// Transform the line segment ends and control points into camera clip space\n\t\t\t\t\tvec4 c0 = projectionMatrix * modelViewMatrix * vec4( control0, 1.0 );\n\t\t\t\t\tvec4 c1 = projectionMatrix * modelViewMatrix * vec4( control1, 1.0 );\n\t\t\t\t\tvec4 p0 = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t\tvec4 p1 = projectionMatrix * modelViewMatrix * vec4( position + direction, 1.0 );\n\n\t\t\t\t\tc0.xy /= c0.w;\n\t\t\t\t\tc1.xy /= c1.w;\n\t\t\t\t\tp0.xy /= p0.w;\n\t\t\t\t\tp1.xy /= p1.w;\n\n\t\t\t\t\t// Get the direction of the segment and an orthogonal vector\n\t\t\t\t\tvec2 dir = p1.xy - p0.xy;\n\t\t\t\t\tvec2 norm = vec2( -dir.y, dir.x );\n\n\t\t\t\t\t// Get control point directions from the line\n\t\t\t\t\tvec2 c0dir = c0.xy - p1.xy;\n\t\t\t\t\tvec2 c1dir = c1.xy - p1.xy;\n\n\t\t\t\t\t// If the vectors to the controls points are pointed in different directions away\n\t\t\t\t\t// from the line segment then the line should not be drawn.\n\t\t\t\t\tfloat d0 = dot( normalize( norm ), normalize( c0dir ) );\n\t\t\t\t\tfloat d1 = dot( normalize( norm ), normalize( c1dir ) );\n\t\t\t\t\tdiscardFlag = float( sign( d0 ) != sign( d1 ) );\n\n\t\t\t\t\t#include <logdepthbuf_vertex>\n\t\t\t\t\t#include <clipping_planes_vertex>\n\t\t\t\t\t#include <fog_vertex>\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\t\t\tuniform vec3 diffuse;\n\t\t\tuniform float opacity;\n\t\t\tvarying float discardFlag;\n\n\t\t\t#include <common>\n\t\t\t#include <color_pars_fragment>\n\t\t\t#include <fog_pars_fragment>\n\t\t\t#include <logdepthbuf_pars_fragment>\n\t\t\t#include <clipping_planes_pars_fragment>\n\t\t\tvoid main() {\n\n\t\t\t\tif ( discardFlag > 0.5 ) discard;\n\n\t\t\t\t#include <clipping_planes_fragment>\n\t\t\t\tvec3 outgoingLight = vec3( 0.0 );\n\t\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t\t\t\t#include <logdepthbuf_fragment>\n\t\t\t\t#include <color_fragment>\n\t\t\t\toutgoingLight = diffuseColor.rgb; // simple shader\n\t\t\t\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t\t\t\t#include <tonemapping_fragment>\n\t\t\t\t#include <encodings_fragment>\n\t\t\t\t#include <fog_fragment>\n\t\t\t\t#include <premultiplied_alpha_fragment>\n\t\t\t}\n\t\t\t"}),Object.defineProperties(this,{opacity:{get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},color:{get:function(){return this.uniforms.diffuse.value}}}),this.setValues(t),this.isLDrawConditionalLineMaterial=!0}}class M extends o{constructor(t,e){super(t,e),this.isConditionalLine=!0}}const v=new s;function k(t){return"Part"===t||"Unofficial_Part"===t}class x{constructor(t,e){this.line=t,this.lineLength=t.length,this.currentCharIndex=0,this.currentChar=" ",this.lineNumber=e}seekNonSpace(){for(;this.currentCharIndex<this.lineLength;){if(this.currentChar=this.line.charAt(this.currentCharIndex)," "!==this.currentChar&&"\t"!==this.currentChar)return;this.currentCharIndex++}}getToken(){const t=this.currentCharIndex++;for(;this.currentCharIndex<this.lineLength&&(this.currentChar=this.line.charAt(this.currentCharIndex)," "!==this.currentChar&&"\t"!==this.currentChar);)this.currentCharIndex++;const e=this.currentCharIndex;return this.seekNonSpace(),this.line.substring(t,e)}getVector(){return new t(parseFloat(this.getToken()),parseFloat(this.getToken()),parseFloat(this.getToken()))}getRemainingString(){return this.line.substring(this.currentCharIndex,this.lineLength)}isAtTheEnd(){return this.currentCharIndex>=this.lineLength}setToEnd(){this.currentCharIndex=this.lineLength}getLineNumberString(){return this.lineNumber>=0?" at line "+this.lineNumber:""}}class D{constructor(t){this.loader=t,this._cache={}}cloneResult(t){const e={};return e.faces=t.faces.map((t=>({colorCode:t.colorCode,material:t.material,vertices:t.vertices.map((t=>t.clone())),normals:t.normals.map((()=>null)),faceNormal:null}))),e.conditionalSegments=t.conditionalSegments.map((t=>({colorCode:t.colorCode,material:t.material,vertices:t.vertices.map((t=>t.clone())),controlPoints:t.controlPoints.map((t=>t.clone()))}))),e.lineSegments=t.lineSegments.map((t=>({colorCode:t.colorCode,material:t.material,vertices:t.vertices.map((t=>t.clone()))}))),e.type=t.type,e.category=t.category,e.keywords=t.keywords,e.subobjects=t.subobjects,e.totalFaces=t.totalFaces,e.startingConstructionStep=t.startingConstructionStep,e.materials=t.materials,e.group=null,e}async fetchData(t){let e=!1,n=0;for(;6!==n;){let a=t;switch(n){case 0:n+=1;break;case 1:a="parts/"+a,n+=1;break;case 2:a="p/"+a,n+=1;break;case 3:a="models/"+a,n+=1;break;case 4:a=t.substring(0,t.lastIndexOf("/")+1)+a,n+=1;break;case 5:e?n=6:(a=t=t.toLowerCase(),e=!0,n=0)}const r=this.loader,o=new l(r.manager);o.setPath(r.partsLibraryPath),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials);try{return await o.loadAsync(a)}catch(t){continue}}throw new Error('LDrawLoader: Subobject "'+t+'" could not be loaded.')}parse(t,e=null){const n=this.loader,a=[],r=[],o=[],s=[],i={},l=t=>i[t]||null;let c="Model",d=null,h=null,u=0;-1!==t.indexOf("\r\n")&&(t=t.replace(/\r\n/g,"\n"));const g=t.split("\n"),p=g.length;let f=!1,w=null,C=null,L=!1,b=!0,y=!1,M=!0,v=!1;for(let t=0;t<p;t++){const e=g[t];if(0===e.length)continue;if(f){e.startsWith("0 FILE ")?(this.setData(w,C),w=e.substring(7),C=""):C+=e+"\n";continue}const p=new x(e,t+1);if(p.seekNonSpace(),p.isAtTheEnd())continue;const k=p.getToken();let D,E,T,S,P,_,N,F,I,A,V;switch(k){case"0":const g=p.getToken();if(g)switch(g){case"!LDRAW_ORG":c=p.getToken();break;case"!COLOUR":D=n.parseColorMetaDirective(p),D?i[D.userData.code]=D:console.warn("LDrawLoader: Error parsing material"+p.getLineNumberString());break;case"!CATEGORY":d=p.getToken();break;case"!KEYWORDS":const e=p.getRemainingString().split(",");e.length>0&&(h||(h=[]),e.forEach((function(t){h.push(t.trim())})));break;case"FILE":t>0&&(f=!0,w=p.getRemainingString(),C="",L=!1,b=!0);break;case"BFC":for(;!p.isAtTheEnd();){const t=p.getToken();switch(t){case"CERTIFY":case"NOCERTIFY":L="CERTIFY"===t,b=!0;break;case"CW":case"CCW":b="CCW"===t;break;case"INVERTNEXT":y=!0;break;case"CLIP":case"NOCLIP":M="CLIP"===t;break;default:console.warn('THREE.LDrawLoader: BFC directive "'+t+'" is unknown.')}}break;case"STEP":v=!0}break;case"1":E=p.getToken(),D=l(E);const x=parseFloat(p.getToken()),R=parseFloat(p.getToken()),W=parseFloat(p.getToken()),O=parseFloat(p.getToken()),z=parseFloat(p.getToken()),G=parseFloat(p.getToken()),j=parseFloat(p.getToken()),U=parseFloat(p.getToken()),H=parseFloat(p.getToken()),$=parseFloat(p.getToken()),q=parseFloat(p.getToken()),B=parseFloat(p.getToken()),Y=(new m).set(O,z,G,x,j,U,H,R,$,q,B,W,0,0,0,1);let J=p.getRemainingString().trim().replace(/\\/g,"/");n.fileMap[J]?J=n.fileMap[J]:J.startsWith("s/")?J="parts/"+J:J.startsWith("48/")&&(J="p/"+J),s.push({line:e,lineIndex:t,material:D,colorCode:E,matrix:Y,fileName:J,inverted:y,startingConstructionStep:v}),y=!1;break;case"2":E=p.getToken(),D=l(E),_=p.getVector(),N=p.getVector(),T={line:e,lineIndex:t,material:D,colorCode:E,vertices:[_,N]},r.push(T);break;case"5":E=p.getToken(),D=l(E),_=p.getVector(),N=p.getVector(),A=p.getVector(),V=p.getVector(),T={line:e,lineIndex:t,material:D,colorCode:E,vertices:[_,N],controlPoints:[A,V]},o.push(T);break;case"3":E=p.getToken(),D=l(E),S=b,P=!L||!M,!0===S?(_=p.getVector(),N=p.getVector(),F=p.getVector()):(F=p.getVector(),N=p.getVector(),_=p.getVector()),a.push({line:e,lineIndex:t,material:D,colorCode:E,faceNormal:null,vertices:[_,N,F],normals:[null,null,null]}),u++,!0===P&&(a.push({material:D,colorCode:E,faceNormal:null,vertices:[F,N,_],normals:[null,null,null]}),u++);break;case"4":E=p.getToken(),D=l(E),S=b,P=!L||!M,!0===S?(_=p.getVector(),N=p.getVector(),F=p.getVector(),I=p.getVector()):(I=p.getVector(),F=p.getVector(),N=p.getVector(),_=p.getVector()),a.push({line:e,lineIndex:t,material:D,colorCode:E,faceNormal:null,vertices:[_,N,F,I],normals:[null,null,null,null]}),u+=2,!0===P&&(a.push({material:D,colorCode:E,faceNormal:null,vertices:[I,F,N,_],normals:[null,null,null,null]}),u+=2);break;default:throw new Error('LDrawLoader: Unknown line type "'+k+'"'+p.getLineNumberString()+".")}}return f&&this.setData(w,C),{faces:a,conditionalSegments:o,lineSegments:r,type:c,category:d,keywords:h,subobjects:s,totalFaces:u,startingConstructionStep:v,materials:i,fileName:e,group:null}}getData(t,e=!0){const n=t.toLowerCase(),a=this._cache[n];return null===a||a instanceof Promise?null:e?this.cloneResult(a):a}async ensureDataLoaded(t){const e=t.toLowerCase();e in this._cache||(this._cache[e]=this.fetchData(t).then((n=>{const a=this.parse(n,t);return this._cache[e]=a,a}))),await this._cache[e]}setData(t,e){const n=t.toLowerCase();this._cache[n]=this.parse(e,t)}}function E(t,e,n,a){return(!a&&"16"===t||a&&"24"===t)&&(t=e),n[t]||null}class T{constructor(t){this.loader=t,this.parseCache=new D(t),this._cache={}}async processIntoMesh(e){const n=this.loader,a=this.parseCache,r=new Set,o=async(t,e=null)=>{const s=t.subobjects,i=[];for(let t=0,e=s.length;t<e;t++){const e=s[t],n=a.ensureDataLoaded(e.fileName).then((()=>{const t=a.getData(e.fileName,!1);return n=t.type,/primitive/i.test(n)||"Subpart"===n?o(a.getData(e.fileName),e):this.loadModel(e.fileName).catch((t=>(console.warn(t),null)));var n}));i.push(n)}const l=new p;l.userData.category=t.category,l.userData.keywords=t.keywords,t.group=l;const c=await Promise.all(i);for(let e=0,a=c.length;e<a;e++){const a=t.subobjects[e],o=c[e];if(null===o)continue;if(o.isGroup){const e=o;a.matrix.decompose(e.position,e.quaternion,e.scale),e.userData.startingConstructionStep=a.startingConstructionStep,e.name=a.fileName,n.applyMaterialsToMesh(e,a.colorCode,t.materials),l.add(e);continue}o.group.children.length&&l.add(o.group);const s=t.lineSegments,i=t.conditionalSegments,d=t.faces,h=o.lineSegments,u=o.conditionalSegments,g=o.faces,m=a.matrix,p=a.inverted,f=m.determinant()<0,w=a.colorCode,C="16"===w?"24":w;for(let e=0,n=h.length;e<n;e++){const n=h[e],a=n.vertices;a[0].applyMatrix4(m),a[1].applyMatrix4(m),n.colorCode="24"===n.colorCode?C:n.colorCode,n.material=n.material||E(n.colorCode,n.colorCode,t.materials,!0),s.push(n)}for(let e=0,n=u.length;e<n;e++){const n=u[e],a=n.vertices,r=n.controlPoints;a[0].applyMatrix4(m),a[1].applyMatrix4(m),r[0].applyMatrix4(m),r[1].applyMatrix4(m),n.colorCode="24"===n.colorCode?C:n.colorCode,n.material=n.material||E(n.colorCode,n.colorCode,t.materials,!0),i.push(n)}for(let e=0,n=g.length;e<n;e++){const n=g[e],a=n.vertices;for(let t=0,e=a.length;t<e;t++)a[t].applyMatrix4(m);n.colorCode="16"===n.colorCode?w:n.colorCode,n.material=n.material||E(n.colorCode,w,t.materials,!1),r.add(n.colorCode),f!==p&&a.reverse(),d.push(n)}t.totalFaces+=o.totalFaces}return e&&n.applyMaterialsToMesh(l,e.colorCode,t.materials),t};for(let t=0,n=e.faces;t<n;t++)r.add(e.faces[t].colorCode);if(await o(e),n.smoothNormals){const n=r.size>1;!function(e){for(let n=0,a=e.length;n<a;n++){const a=e[n],r=a.vertices,o=r[0],s=r[1],i=r[2];L.subVectors(s,o),b.subVectors(i,s),a.faceNormal=(new t).crossVectors(L,b).normalize()}}(e.faces),function(e,n,a=!1){const r=100*(1+1e-10);function o(t){return`${~~(t.x*r)},${~~(t.y*r)},${~~(t.z*r)}`}function i(t,e){return`${o(t)}_${o(e)}`}function l(t,e,n){n.direction.subVectors(e,t).normalize();const a=t.dot(n.direction);return n.origin.copy(t).addScaledVector(n.direction,-a),n}function c(t){return i(t.origin,t.direction)}const d=new Set,h=new Map,u={},g=[];for(let t=0,e=n.length;t<e;t++){const e=n[t].vertices,r=e[0],o=e[1];if(d.add(i(r,o)),d.add(i(o,r)),a){const t=l(r,o,new s),e=c(t);if(!h.has(e)){l(o,r,t);const n=c(t),a={ray:t,distances:[]};h.set(e,a),h.set(n,a)}const n=h.get(e);let a=n.ray.direction.dot(r),i=n.ray.direction.dot(o);a>i&&([a,i]=[i,a]),n.distances.push(a,i)}}for(let t=0,n=e.length;t<n;t++){const n=e[t],r=n.vertices,o=r.length;for(let t=0;t<o;t++){const e=t,s=(t+1)%o,g=r[e],m=r[s],p=i(g,m);if(d.has(p))continue;if(a){l(g,m,v);const t=c(v);if(h.has(t)){const e=h.get(t),{ray:n,distances:a}=e;let r=n.direction.dot(g),o=n.direction.dot(m);r>o&&([r,o]=[o,r]);let s=!1;for(let t=0,e=a.length;t<e;t+=2)if(r>=a[t]&&o<=a[t+1]){s=!0;break}if(s)continue}}const f={index:e,tri:n};u[p]=f}}for(;;){let e=null;for(const t in u){e=u[t];break}if(null===e)break;const n=[e];for(;n.length>0;){const e=n.pop().tri,a=e.vertices,r=e.normals,o=e.faceNormal,s=a.length;for(let l=0;l<s;l++){const c=l,d=(l+1)%s,h=a[c],m=a[d];delete u[i(h,m)];const p=i(m,h),f=u[p];if(f){const a=f.tri,s=f.index,i=a.normals,l=i.length,h=a.faceNormal;if(Math.abs(a.faceNormal.dot(e.faceNormal))<.25)continue;p in u&&(n.push(f),delete u[p]);const m=(s+1)%l;r[c]&&i[m]&&r[c]!==i[m]&&(i[m].norm.add(r[c].norm),r[c].norm=i[m].norm);let w=r[c]||i[m];null===w&&(w={norm:new t},g.push(w.norm)),null===r[c]&&(r[c]=w,w.norm.add(o)),null===i[m]&&(i[m]=w,w.norm.add(h)),r[d]&&i[s]&&r[d]!==i[s]&&(i[s].norm.add(r[d].norm),r[d].norm=i[s].norm);let C=r[d]||i[s];null===C&&(C={norm:new t},g.push(C.norm)),null===r[d]&&(r[d]=C,C.norm.add(o)),null===i[s]&&(i[s]=C,C.norm.add(h))}}}}for(let t=0,e=g.length;t<e;t++)g[t].normalize()}(e.faces,e.lineSegments,n)}const i=e.group;return e.faces.length>0&&i.add(P(e.faces,3,!1,e.totalFaces)),e.lineSegments.length>0&&i.add(P(e.lineSegments,2)),e.conditionalSegments.length>0&&i.add(P(e.conditionalSegments,2,!0)),i}hasCachedModel(t){return null!==t&&t.toLowerCase()in this._cache}async getCachedModel(t){if(null!==t&&this.hasCachedModel(t)){const e=t.toLowerCase();return(await this._cache[e]).clone()}return null}async loadModel(t){const e=this.parseCache,n=t.toLowerCase();if(this.hasCachedModel(t))return this.getCachedModel(t);{await e.ensureDataLoaded(t);const a=e.getData(t),r=this.processIntoMesh(a);if(this.hasCachedModel(t))return this.getCachedModel(t);k(a.type)&&(this._cache[n]=r);return(await r).clone()}}async parseModel(t){const e=this.parseCache.parse(t);return k(e.type)&&this.hasCachedModel(e.fileName)?this.getCachedModel(e.fileName):this.processIntoMesh(e)}}function S(t,e){return t.colorCode===e.colorCode?0:t.colorCode<e.colorCode?-1:1}function P(e,n,a=!1,r=null){e.sort(S),null===r&&(r=e.length);const s=new Float32Array(n*r*3),i=3===n?new Float32Array(n*r*3):null,l=[],c=new Array(6),d=new h;let m=null,p=0,f=0,w=0;for(let r=0,o=e.length;r<o;r++){const o=e[r];let h=o.vertices;4===h.length&&(c[0]=h[0],c[1]=h[1],c[2]=h[2],c[3]=h[0],c[4]=h[2],c[5]=h[3],h=c);for(let t=0,e=h.length;t<e;t++){const e=h[t],n=w+3*t;s[n+0]=e.x,s[n+1]=e.y,s[n+2]=e.z}if(3===n){if(!o.faceNormal){const e=h[0],n=h[1],a=h[2];L.subVectors(n,e),b.subVectors(a,n),o.faceNormal=(new t).crossVectors(L,b).normalize()}let e=o.normals;4===e.length&&(c[0]=e[0],c[1]=e[1],c[2]=e[2],c[3]=e[0],c[4]=e[2],c[5]=e[3],e=c);for(let t=0,n=e.length;t<n;t++){let n=o.faceNormal;e[t]&&(n=e[t].norm);const a=w+3*t;i[a+0]=n.x,i[a+1]=n.y,i[a+2]=n.z}}if(m!==o.colorCode){null!==m&&d.addGroup(p,f,l.length-1);const t=o.material;null!==t?3===n?l.push(t):2===n&&(a?l.push(t.userData.edgeMaterial.userData.conditionalEdgeMaterial):l.push(t.userData.edgeMaterial)):l.push(o.colorCode),m=o.colorCode,p=w/3,f=h.length}else f+=h.length;w+=3*h.length}f>0&&d.addGroup(p,1/0,l.length-1),d.setAttribute("position",new u(s,3)),null!==i&&d.setAttribute("normal",new u(i,3));let C=null;if(2===n?C=a?new M(d,1===l.length?l[0]:l):new o(d,1===l.length?l[0]:l):3===n&&(C=new g(d,1===l.length?l[0]:l)),a){C.isConditionalLine=!0;const t=new Float32Array(3*e.length*2),n=new Float32Array(3*e.length*2),a=new Float32Array(3*e.length*2);for(let r=0,o=e.length;r<o;r++){const o=e[r],s=o.vertices,i=o.controlPoints,l=i[0],c=i[1],d=s[0],h=s[1],u=3*r*2;t[u+0]=l.x,t[u+1]=l.y,t[u+2]=l.z,t[u+3]=l.x,t[u+4]=l.y,t[u+5]=l.z,n[u+0]=c.x,n[u+1]=c.y,n[u+2]=c.z,n[u+3]=c.x,n[u+4]=c.y,n[u+5]=c.z,a[u+0]=h.x-d.x,a[u+1]=h.y-d.y,a[u+2]=h.z-d.z,a[u+3]=h.x-d.x,a[u+4]=h.y-d.y,a[u+5]=h.z-d.z}d.setAttribute("control0",new u(t,3,!1)),d.setAttribute("control1",new u(n,3,!1)),d.setAttribute("direction",new u(a,3,!1))}return C}class _ extends i{constructor(t){super(t),this.materials=[],this.materialLibrary={},this.partsCache=new T(this),this.fileMap={},this.setMaterials([]),this.smoothNormals=!0,this.partsLibraryPath=""}setPartsLibraryPath(t){return this.partsLibraryPath=t,this}async preloadMaterials(t){const e=new l(this.manager);e.setPath(this.path),e.setRequestHeader(this.requestHeader),e.setWithCredentials(this.withCredentials);const n=/^0 !COLOUR/,a=(await e.loadAsync(t)).split(/[\n\r]/g),r=[];for(let t=0,e=a.length;t<e;t++){const e=a[t];if(n.test(e)){const t=e.replace(n,""),a=this.parseColorMetaDirective(new x(t));r.push(a)}}this.setMaterials(r)}load(t,e,n,a){const r=new l(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(t,(t=>{this.partsCache.parseModel(t,this.materialLibrary).then((t=>{this.applyMaterialsToMesh(t,"16",this.materialLibrary,!0),this.computeConstructionSteps(t),e(t)})).catch(a)}),n,a)}parse(t,e){this.partsCache.parseModel(t,this.materialLibrary).then((t=>{this.computeConstructionSteps(t),e(t)}))}setMaterials(t){this.materialLibrary={},this.materials=[];for(let e=0,n=t.length;e<n;e++)this.addMaterial(t[e]);return this.addMaterial(this.parseColorMetaDirective(new x("Main_Colour CODE 16 VALUE #FF8080 EDGE #333333"))),this.addMaterial(this.parseColorMetaDirective(new x("Edge_Colour CODE 24 VALUE #A0A0A0 EDGE #333333"))),this}setFileMap(t){return this.fileMap=t,this}addMaterial(t){const e=this.materialLibrary;return e[t.userData.code]||(this.materials.push(t),e[t.userData.code]=t),this}getMaterial(t){if(t.startsWith("0x2")){const e=t.substring(3);return this.parseColorMetaDirective(new x("Direct_Color_"+e+" CODE -1 VALUE #"+e+" EDGE #"+e))}return this.materialLibrary[t]||null}applyMaterialsToMesh(t,e,n,a=!1){const r=this,o="16"===e;function s(t,s){if(o&&!(s in n)&&!a)return s;const i=t.isLineSegments||t.isConditionalLine;(!i&&"16"===s||i&&"24"===s)&&(s=e);let l=null;if(s in n)l=n[s];else{if(!a)return s;if(l=r.getMaterial(s),null===l)throw new Error(`LDrawLoader: Material properties for code ${s} not available.`)}return t.isLineSegments&&(l=l.userData.edgeMaterial,t.isConditionalLine&&(l=l.userData.conditionalEdgeMaterial)),l}t.traverse((t=>{if(t.isMesh||t.isLineSegments)if(Array.isArray(t.material))for(let e=0,n=t.material.length;e<n;e++)t.material[e].isMaterial||(t.material[e]=s(t,t.material[e]));else t.material.isMaterial||(t.material=s(t,t.material))}))}getMainMaterial(){return this.getMaterial("16")}getMainEdgeMaterial(){const t=this.getMainMaterial();return t&&t.userData?t.userData.edgeMaterial:null}parseColorMetaDirective(t){let e=null,n=16711935,a=16711935,r=1,o=!1,s=0,i=0,l=null;const h=t.getToken();if(!h)throw new Error('LDrawLoader: Material name was expected after "!COLOUR tag'+t.getLineNumberString()+".");let u=null;for(;u=t.getToken(),u;)switch(u.toUpperCase()){case"CODE":e=t.getToken();break;case"VALUE":if(n=t.getToken(),n.startsWith("0x"))n="#"+n.substring(2);else if(!n.startsWith("#"))throw new Error("LDrawLoader: Invalid color while parsing material"+t.getLineNumberString()+".");break;case"EDGE":if(a=t.getToken(),a.startsWith("0x"))a="#"+a.substring(2);else if(!a.startsWith("#")){if(l=this.getMaterial(a),!l)throw new Error("LDrawLoader: Invalid edge color while parsing material"+t.getLineNumberString()+".");l=l.userData.edgeMaterial}break;case"ALPHA":if(r=parseInt(t.getToken()),isNaN(r))throw new Error("LDrawLoader: Invalid alpha value in material definition"+t.getLineNumberString()+".");r=Math.max(0,Math.min(1,r/255)),r<1&&(o=!0);break;case"LUMINANCE":if(s=parseInt(t.getToken()),isNaN(s))throw new Error("LDrawLoader: Invalid luminance value in material definition"+x.getLineNumberString()+".");s=Math.max(0,Math.min(1,s/255));break;case"CHROME":i=1;break;case"PEARLESCENT":i=2;break;case"RUBBER":i=3;break;case"MATTE_METALLIC":i=4;break;case"METAL":i=5;break;case"MATERIAL":t.setToEnd();break;default:throw new Error('LDrawLoader: Unknown token "'+u+'" while parsing material'+t.getLineNumberString()+".")}let g=null;switch(i){case 0:g=new c({color:n,roughness:.3,metalness:0});break;case 2:g=new c({color:n,roughness:.3,metalness:.25});break;case 1:g=new c({color:n,roughness:0,metalness:1});break;case 3:g=new c({color:n,roughness:.9,metalness:0});break;case 4:g=new c({color:n,roughness:.8,metalness:.4});break;case 5:g=new c({color:n,roughness:.2,metalness:.85})}return g.transparent=o,g.premultipliedAlpha=!0,g.opacity=r,g.depthWrite=!o,g.color.convertSRGBToLinear(),g.polygonOffset=!0,g.polygonOffsetFactor=1,0!==s&&g.emissive.set(g.color).multiplyScalar(s),l||(l=new d({color:a,transparent:o,opacity:r,depthWrite:!o}),l.userData.code=e,l.name=h+" - Edge",l.color.convertSRGBToLinear(),l.userData.conditionalEdgeMaterial=new y({fog:!0,transparent:o,depthWrite:!o,color:a,opacity:r}),l.userData.conditionalEdgeMaterial.color.convertSRGBToLinear()),g.userData.code=e,g.name=h,g.userData.edgeMaterial=l,this.addMaterial(g),g}computeConstructionSteps(t){let e=0;t.traverse((t=>{t.isGroup&&(t.userData.startingConstructionStep&&e++,t.userData.constructionStep=e)})),t.userData.numConstructionSteps=e+1}}class N{constructor(t,e,n,a){this.line=t,this.lineIndex=e,this.matrix=n,this.group=a}}class F{constructor(t,e,n,a){this.fileName=t,this.lines=e.split("\n"),this.modelGroup=n,this.modelLines=a}findLine(t){return this.modelLines.find((e=>e.group===t))}}class I{constructor(t){this.lDrawLoader=t}async load(t,e){const n=new p;n.rotation.x=Math.PI,await this.fillCache(this.lDrawLoader.partsLibraryPath+t);const a=this.lDrawLoader.partsCache.parseCache.parse(e),r=await this.buildLines(a,n);return new F(t,e,n,r)}async fillCache(t){let e,n;const a=new Promise(((t,a)=>{e=t,n=a}));return this.lDrawLoader.load(t,(()=>e()),(()=>{}),(t=>n(t))),a}async buildLines(t,e){if(!t.subobjects)return Promise.resolve([]);const n=t.subobjects.map((t=>this.buildLine(t)));return Promise.all(n).then((t=>(t.forEach((t=>e.add(t.group))),t)))}async buildLine(t){let e,n;const a=new Promise(((t,a)=>{e=t,n=a}));return this.loadPart(`models/ldraw/parts/${t.fileName}`,t.colorCode,(n=>{n.applyMatrix4(t.matrix),e(new N(t.line,t.lineIndex,t.matrix,n))}),(()=>{}),(()=>n())),a}loadPart(t,e,n,a,r){const o=new l(this.lDrawLoader.manager);o.setPath(this.lDrawLoader.path),o.setRequestHeader(this.lDrawLoader.requestHeader),o.setWithCredentials(this.lDrawLoader.withCredentials),o.load(t,(t=>{this.lDrawLoader.partsCache.parseModel(t).then((t=>{this.lDrawLoader.applyMaterialsToMesh(t,e,this.lDrawLoader.materialLibrary,!0),this.lDrawLoader.computeConstructionSteps(t),n(t)})).catch(r)}),a,r)}}class A extends HTMLElement{constructor(){var t,e;super();const n=document.createElement("template");n.innerHTML='\n<style>\n:host {\n\tdisplay: block;\n\tmargin: 0;\n\theight: 100%;\n}\n</style>\n<model-pane id="pane"></model-pane>\n<floating-action>\n  <a target="_blank" class="button menu-item"></a>\n  <a target="_blank" class="button menu-item"></a>\n  <a target="_blank" class="button menu-item"></a>\n</floating-action>\n',this.attachShadow({mode:"open"}),null===(t=this.shadowRoot)||void 0===t||t.appendChild(n.content.cloneNode(!0)),this.scene=new f;const a=new w(13421772,.4);this.scene.add(a);const r=new C(16777215,1);r.position.set(-1e3,1200,1500),this.scene.add(r),this.modelPane=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector("#pane"),this.modelPane.scene=this.scene,this.modelPane.addEventListener("partselected",(t=>{console.log(`Line selected ${t.detail.line}`),this.selectedLine=t.detail})),this.modelPane.addEventListener("partdeselected",(()=>{var t;console.log(`Line deselected ${null===(t=this.selectedLine)||void 0===t?void 0:t.line}`),this.selectedLine=void 0})),this.modelPane.addEventListener("partmoved",(t=>{const e=t;console.log(`Line moved ${e.detail.line}`),e.detail.line.matrix.multiply(e.detail.matrix),e.detail.line.group.applyMatrix4(e.detail.matrix),this.selectedLine=void 0})),this.lDrawLoader=new _}connectedCallback(){this.init()}async init(){const t="models/ldraw/";this.lDrawLoader.setPartsLibraryPath(t),this.lDrawLoader.preloadMaterials(`${t}LDConfig.ldr`),await this.loadModel()}async loadModel(){const t=new I(this.lDrawLoader);this.model=await t.load("models/car.ldr",'0 Example Car for Demonstration of LDRAW Library\n    0 Name: car.ldr\n    0 Author: James Jessiman\n    \n    0 // This file demonstrates how you can assemble a model from part files.\n    0 // Each line starting with "1" adds one part. It states its color, position and orientation.\n    0 // Each line reading "0 STEP" begins another step in building the model.\n    0 // To watch these steps and look at the model, open this file in program LDView.\n    0 // There, you can go forward and backward through the build steps of this file.\n    0 // This file intentionally is kept as simple as possible.\n    0 // LDRAW offers many more things. For more information, visit http://www.ldraw.org\n    \n    1 0 0 0 -90 1 0 0 0 1 0 0 0 1 4315.dat\n    1 7 0 0 -60 1 0 0 0 1 0 0 0 1 4600.dat\n    1 0 0 0 0 1 0 0 0 1 0 0 0 1 3031.dat\n    1 7 0 0 60 1 0 0 0 1 0 0 0 1 4600.dat\n    1 0 0 0 90 -1 0 0 0 1 0 0 0 -1 4315.dat\n    \n    0 STEP\n    \n    1 46 30 -8 -90 1 0 0 0 1 0 0 0 1 3024.dat\n    1 46 -30 -8 -90 1 0 0 0 1 0 0 0 1 3024.dat\n    1 4 0 -8 -60 0 0 1 0 1 0 -1 0 0 3020.dat\n    1 4 30 -8 -10 0 0 1 0 1 0 -1 0 0 3623.dat\n    1 4 -30 -8 -10 0 0 1 0 1 0 -1 0 0 3623.dat\n    1 4 30 -8 30 1 0 0 0 1 0 0 0 1 3024.dat\n    1 4 -30 -8 30 1 0 0 0 1 0 0 0 1 3024.dat\n    1 4 0 -8 50 0 0 1 0 1 0 -1 0 0 3021.dat\n    1 4 0 -8 90 1 0 0 0 1 0 0 0 1 3710.dat\n    1 1 0 -8 0 1 0 0 0 1 0 0 0 1 4079.dat\n    \n    0 STEP\n    \n    1 46 30 -16 90 1 0 0 0 1 0 0 0 1 3024.dat\n    1 46 -30 -16 90 1 0 0 0 1 0 0 0 1 3024.dat\n    1 4 0 -16 -30 1 0 0 0 1 0 0 0 1 3829c01.dat\n    \n    0 STEP\n    \n    1 4 0 -24 -60 1 0 0 0 1 0 0 0 1 3788.dat\n    1 4 0 -24 60 1 0 0 0 1 0 0 0 1 3788.dat\n    1 36 30 -24 90 1 0 0 0 1 0 0 0 1 3024.dat\n    1 36 -30 -24 90 1 0 0 0 1 0 0 0 1 3024.dat\n    \n    0 STEP\n    \n    1 7 0 -32 -90 1 0 0 0 1 0 0 0 1 3937.dat\n    1 7 0 -32 -90 1 0 0 0 1 0 0 0 1 3938.dat\n    1 4 30 -32 -90 1 0 0 0 1 0 0 0 1 4070.dat\n    1 4 -30 -32 -90 1 0 0 0 1 0 0 0 1 4070.dat\n    1 46 30 -22 -104 1 0 0 0 0 -1 0 1 0 6141.dat\n    1 46 -30 -22 -104 1 0 0 0 0 -1 0 1 0 6141.dat\n    1 4 30 -32 -60 0 0 1 0 1 0 -1 0 0 3023.dat\n    1 4 -30 -32 -60 0 0 1 0 1 0 -1 0 0 3023.dat\n    1 4 30 -32 -30 1 0 0 0 1 0 0 0 1 3822.dat\n    1 4 -30 -32 -30 1 0 0 0 1 0 0 0 1 3821.dat\n    1 4 30 -32 30 1 0 0 0 1 0 0 0 1 3005.dat\n    1 4 -30 -32 30 1 0 0 0 1 0 0 0 1 3005.dat\n    1 4 30 -32 70 0 0 1 0 1 0 -1 0 0 3623.dat\n    1 4 -30 -32 70 0 0 1 0 1 0 -1 0 0 3623.dat\n    1 4 0 -32 90 1 0 0 0 1 0 0 0 1 3004.dat\n    \n    0 STEP\n    \n    1 4 0 -40 -80 1 0 0 0 1 0 0 0 1 3068b.dat\n    1 4 30 -40 -80 0 0 1 0 1 0 -1 0 0 3023.dat\n    1 4 -30 -40 -80 0 0 1 0 1 0 -1 0 0 3023.dat\n    1 4 0 -40 -50 1 0 0 0 1 0 0 0 1 3004.dat\n    1 4 30 -40 -40 0 0 1 0 1 0 -1 0 0 3023.dat\n    1 4 -30 -40 -40 0 0 1 0 1 0 -1 0 0 3023.dat\n    1 0 30 -40 40 0 0 1 0 1 0 -1 0 0 3023.dat\n    1 0 -30 -40 40 0 0 1 0 1 0 -1 0 0 3023.dat\n    1 0 30 -40 70 1 0 0 0 1 0 0 0 1 3024.dat\n    1 0 -30 -40 70 1 0 0 0 1 0 0 0 1 3024.dat\n    1 0 0 -40 90 1 0 0 0 1 0 0 0 1 3710.dat\n    \n    0 STEP\n    \n    1 39 0 -88 -30 1 0 0 0 1 0 0 0 1 3823.dat\n    1 0 0 -88 30 1 0 0 0 1 0 0 0 1 4214.dat\n    1 39 0 -88 70 -1 0 0 0 1 0 0 0 -1 3823.dat\n    \n    0 STEP\n    \n    1 0 0 -96 0 1 0 0 0 1 0 0 0 1 4213.dat\n    1 0 0 -96 60 1 0 0 0 1 0 0 0 1 3020.dat\n    1 7 -30 6 60 0 0 1 0 1 0 -1 0 0 4624.dat\n    1 7 30 6 60 0 0 -1 0 1 0 1 0 0 4624.dat\n    1 7 -30 6 -60 0 0 1 0 1 0 -1 0 0 4624.dat\n    1 7 30 6 -60 0 0 -1 0 1 0 1 0 0 4624.dat\n    1 0 -30 6 60 0 0 1 0 1 0 -1 0 0 3641.dat\n    1 0 30 6 60 0 0 -1 0 1 0 1 0 0 3641.dat\n    1 0 -30 6 -60 0 0 1 0 1 0 -1 0 0 3641.dat\n    1 0 30 6 -60 0 0 -1 0 1 0 1 0 0 3641.dat\n    \n    0 STEP'),this.scene.add(this.model.modelGroup),this.modelPane&&(this.modelPane.scene=this.scene,this.modelPane.model=this.model,this.modelPane.render())}}customElements.define("brick-edit",A);
